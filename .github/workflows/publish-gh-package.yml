name: Build and Publish Docker Image

#on:
#  push:
#    branches:
#      - main

on: workflow_dispatch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Verify Docker installation
      run: |
        docker --version
        docker info

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Prepare Unity License File
      run: |
        echo "${{ secrets.UNITY_LICENSE }}" > unity_license.ulf
        echo "Unity license file content (last 10 lines):"
        tail -n 10 unity_license.ulf

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          UNITY_EMAIL=${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD=${{ secrets.UNITY_PASSWORD }}

        secret-files: |
          "unity_license=unity_license.ulf"
        outputs: type=docker,dest=/tmp/myimage.tar

    - name: Load image
      run: |
        docker load --input /tmp/myimage.tar
        docker image ls -a

    - name: Debug - Run image
      run: |
        docker run --rm ${{ steps.meta.outputs.tags }} || true
        docker logs $(docker ps -lq) || true

    - name: Check Disk Usage
      run: df -h

    - name: Extract artifacts from Docker image
      run: |
        docker create --name temp ${{ steps.meta.outputs.tags }}
        docker cp temp:/unity-project/output ./artifacts
        #docker rm temp
        docker rm $container_id

    - name: Upload artifacts to GitHub Packages
      uses: actions/upload-artifact@v3
      with:
        name: unity-build-artifacts
        path: |
          ./artifacts
          ./unity_build.log

    - name: Clean up
      run: rm unity_license.ulf
