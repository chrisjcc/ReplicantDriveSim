# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# Multi-platform image with GitHub Actions
name: Publish Docker image

on:
  workflow_dispatch:
#  release:
#    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    permissions:
      packages: write
      contents: read
      id-token: write # This is required for attestation
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # QEMU emulation, allows building images for different architectures 
      # even if the build machine itself is not of that architecture. 
      # This means you can build ARM64 images on an AMD64 machine and vice versa.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: chrisjcc/replicantdrivesim

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        env: 
          DOCKER_BUILD_SUMMARY: true
        with:
          # The image will be compatible with both x86_64 (AMD64) and ARM64 architectures.
          platforms: ${{ matrix.platform }}
          context: ./External
          file: ./External/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Debug Logging
        run: |
           echo "subject-digest: " ${{ steps.docker_build.outputs.digest }}
           echo "subject-name:" ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        env:
           DOCKER_METADATA_OUTPUT_TAGS: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
        with:
          #subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-name: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: true
