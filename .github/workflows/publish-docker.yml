# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# Multi-platform image with GitHub Actions
name: Publish Docker image

on:
  release:
    types: [published]
  repository_dispatch:
    types: [trigger_docker_publish]
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (tag or branch)'
        required: true
        default: 'main'
env:
  DOCKER_NAMESPACE: chrisjcc
  DOCKER_REPOSITORY: replicantdrivesim

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest 
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Check disk space
        run: |
          echo "Available disk space before build:"
          df -h

      # QEMU emulation, allows building images for different architectures 
      # even if the build machine itself is not of that architecture. 
      # This means you can build ARM64 images on an AMD64 machine and vice versa.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}-
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the version
        id: get_version
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event_name }} == 'repository_dispatch' ]]; then
            echo "VERSION=${{ github.event.client_payload.ref }}" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            echo "VERSION=${{ github.event.inputs.ref }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=raw,value=${{ steps.meta.outputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        env: 
          DOCKER_BUILD_SUMMARY: true
        with:
          context: ./External
          file: ./External/Dockerfile
          # Support single multi-architecture Docker image 
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true

      - name: Check disk space after build
        run: |
          echo "Available disk space after build:"
          df -h

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.meta.outputs.version }}
      - name: Clean up
        if: always()
        run: |
          docker system prune -af
          echo "Available disk space after cleanup:"
          df -h
