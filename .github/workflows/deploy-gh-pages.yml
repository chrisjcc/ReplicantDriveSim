# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Building and deploying a Jekyll site to GitHub Pages & Doxygen Documentation
name: Deploy GitHub Pages

on:
  # Add this section to listen for the repository dispatch event
  repository_dispatch:
    types: [trigger_gh_pages]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref to deploy (tag or branch)'
        required: false
        default: 'main'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref || github.event.inputs.ref || 'main' }}
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install Doxygen
        run: sudo apt-get install doxygen -y

      - name: Set version in documentation
        run: |
          VERSION="${{ github.event.client_payload.ref || github.event.inputs.ref || 'latest' }}"
          echo "Documenting version: $VERSION"
          # You might want to update version information in your documentation config
          if [ -f "_config.yml" ]; then
            sed -i "s/version:.*/version: ${VERSION}/" _config.yml
          fi

      - name: Generate Doxygen Documentation
        run: doxygen Doxyfile

      - name: Install Jekyll and dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build Jekyll site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
          SITE_VERSION: ${{ github.event.client_payload.ref || github.event.inputs.ref || 'latest' }}

      - name: Upload combined artifact
        uses: actions/upload-pages-artifact@v3
        # Automatically uploads an artifact from the './_site' directory by default
        with:
          path: _site

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      deployment_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Report deployment status
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "Deployed version ${{ github.event.client_payload.ref || 'latest' }} to ${{ steps.deployment.outputs.page_url }}"
