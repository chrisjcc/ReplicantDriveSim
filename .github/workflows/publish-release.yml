# This workflow automates the creation of GitHub releases upon pushing new tags, using Node.js 20 and GitHub CLI.
name: Create Release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Generate Release Notes
      id: generate_notes
      uses: actions/github-script@v6
      with:
        script: |
          const { data: commits } = await github.rest.repos.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.ref,
            per_page: 100
          });
          
          const commitMessages = commits.map(commit => `- ${commit.commit.message}`).join('\n');
          
          // Collect unique contributors
          const contributors = new Set();
          commits.forEach(commit => {
            if (commit.author && commit.author.login) {
              contributors.add(commit.author.login);
            }
          });
          
          const contributorsSection = Array.from(contributors).map(contributor => `${contributor}`).join('\n');
          
          const changelogUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/commits/${context.ref}`;
          const releaseNotes = `## What's Changed\n${commitMessages}\n\n## Contributors\n${contributorsSection}\n\n**Full Changelog**: ${changelogUrl}`;

          core.setOutput('releaseNotes', releaseNotes);

    - name: Create Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref }} --title "Release ${{ github.ref }}" --notes "${{ steps.generate_notes.outputs.releaseNotes }}"
